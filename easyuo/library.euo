; Library v1.3.0 2017-02-03T16:58:12-02:00
; More on https://github.com/haggen/euo
;
; About:
; Commonly used subroutines are deferred to this file.
;
; Usage:
; call library.euo <subroutine> <arguments...>
;

; Make it fast.
linespercycle 60

; Read debug flag from current namespace.
set %debug !debug

; Define namespace.
if #nsname <> Library
{
  namespace push
  namespace local Library
}

; Call the given subroutine, with
; following optional arguments.
set !a
set !0 %0 - 1

if %0 > 1
{
  for !i 2 %0
  {
    set !h !i - 1
    set ! . !h % . !i
    set !a !a , #spc , % . !i
  }
}

; Call selected subroutine.
gosub %1 !a

; Load back the previous namespace.
namespace pop

; Done.
exit

;
; Reads journal between two points, if third
; argument is omitted assumes last index and
; read string from second argument.
;
; !1 -> Starting index.
; !2 -> Ending index.
; !3 -> String to search for.
;
sub journal
  if !0 < 3
  {
    set !3 !2
    set !2 #jindex
  }
  for !i !1 !2
  {
    scanjournal !i
    if !3 in #journal
      return #true
  }
  return #false

;
; Mark or reckon time passed
; since last call, in seconds.
;
sub benchmark
  set !r #scnt - !b
  set !b #scnt
  return !r

;
; Wait for player to target something.
;
sub target
  set #targcurs 1
  while #targcurs = 1
    wait 2
  return #ltargetid

;
; Display debug message if %debug flag is #true.
;
sub debug
  if %debug
    event sysmessage !a
  return

;
; Move the item to given container, and
; save possible response messages into 
; the result.
;
; !1 -> ID of the item you want to move.
; !2 -> ID of the container where the item will be moved into.
; !3 -> Pause after dropping the item. Default is 6 cycles i.e. 300ms.
;
sub move
  set !j #jindex

  if !0 < 3
    set !3 6

  exevent drag !1 65535
  exevent dropc !2
  wait !3

  ; Check for possible response messages
  call library.euo journal !j must_wait_to_perform
  if #result
    return must_wait_to_perform

  call library.euo journal !j am_dead
  if #result
    return am_dead

  call library.euo journal !j cannot_do_that
  if #result
    return cannot_do_that

  call library.euo journal !j too_far_away
  if #result
    return too_far_away

  call library.euo journal !j out_of_sight
  if #result
    return out_of_sight

  return #true

;
; Wait for system variables conditions to be met.
;
; !1 -> Variable to be evaluated.
; !2 -> Evaluating operator.
; !3 -> Value to be matched.
; ...
; !n -> Timeout. Default is 3s.
;
sub waitforsysvars
  set %n !0 / 3

  if ( !0 % 3 = 1 )
    set %timeout #scnt + % . !0
  else
    set %timeout #scnt + 3

  for %i 1 %n
  {
    set %offset 3 * %i - 2
    set %evaluation %offset + 1
    set %value %offset + 2

    if ! ( # . ! . %offset ! . %evaluation  ! . %value )
      set %i 0

    if #scnt > %timeout
      return #false
  }
  return #true